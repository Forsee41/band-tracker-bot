# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main', 'dev']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ndeloof/install-compose-action@v0.0.1

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run docker-compose
        run: |
          docker-compose -f docker-compose-actions.yaml up -d

      - name: Run migrations
        run: |
          alembic upgrade head

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 band_tracker tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 band_tracker tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Test with pytest
        env:
          TEST_DB_LOGIN: 'test_postgres'
          TEST_DB_PASSWORD: 'test_postgres'
          TEST_DB_IP: 'localhost'
          TEST_DB_PORT: '5433'
          TEST_DB_NAME: 'test_postgres'
        run: |
          python -m pytest --asyncio-mode=auto
