# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run Postgres
        run: |
          docker run -d --name band_tracker_test_db -p 5433:5432 -e POSTGRES_USER='test_postgres' -e POSTGRES_PASSWORD='test_postgres' -e POSTGRES_DB='test_postgres' postgres:14.1-alpine

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 band_tracker tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # secondary checks
          flake8 band_tracker tests --count --max-complexity=10 --max-line-length=88 --statistics

      - name: Typecheck with pyright
        run: |
          pyright band_tracker tests

      - name: Typecheck with mypy
        run: |
          mypy band_tracker tests

      - name: Check for debug marks in tests
        run: |
          if grep -r --include=\*.py "@pytest.mark.debug" tests; then
            echo "Debug mark found in tests. Debug marks are not allowed in prs."
            echo "Use 'make debug' command to check which tests have debug mark."
            exit 1
          fi

      - name: Test with pytest
        env:
          TEST_DB_LOGIN: "test_postgres"
          TEST_DB_PASSWORD: "test_postgres"
          TEST_DB_IP: "localhost"
          TEST_DB_PORT: "5433"
          TEST_DB_NAME: "test_postgres"
        run: |
          python -m pytest --asyncio-mode=auto
