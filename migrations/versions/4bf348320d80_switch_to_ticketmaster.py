"""switch to ticketmaster

Revision ID: 4bf348320d80
Revises: c02a618481c0
Create Date: 2023-07-05 16:17:23.362075

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4bf348320d80"
down_revision = "c02a618481c0"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "artist_image",
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("artist_id", "url"),
    )
    op.create_table(
        "artist_tm_data",
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("artist_id"),
    )
    op.create_table(
        "event_image",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("event_id", "url"),
    )
    op.create_table(
        "event_tm_data",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.create_table(
        "sales",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("on_sale", sa.Boolean(), nullable=False),
        sa.Column("price_max", sa.Integer(), nullable=False),
        sa.Column("price_min", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.drop_table("event_sg_data")
    op.drop_table("artist_sg_data")
    op.drop_table("event_stats")
    op.add_column("artist", sa.Column("tickets_link", sa.String(), nullable=False))
    op.add_column("artist", sa.Column("inst_link", sa.String(), nullable=True))
    op.add_column("artist", sa.Column("youtube_link", sa.String(), nullable=True))
    op.drop_column("artist", "score")
    op.drop_column("artist", "url")
    op.add_column("event", sa.Column("start_date", sa.DateTime(), nullable=False))
    op.add_column("event", sa.Column("ticket_url", sa.String(), nullable=False))
    op.drop_column("event", "type")
    op.drop_column("event", "date")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "event",
        sa.Column("date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "event", sa.Column("type", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_column("event", "ticket_url")
    op.drop_column("event", "start_date")
    op.add_column(
        "artist", sa.Column("url", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "artist",
        sa.Column(
            "score",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_column("artist", "youtube_link")
    op.drop_column("artist", "inst_link")
    op.drop_column("artist", "tickets_link")
    op.create_table(
        "event_stats",
        sa.Column("event_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("listing_cnt", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("price_avg", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("price_max", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("price_min", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
            name="event_stats_event_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("event_id", name="event_stats_pkey"),
    )
    op.create_table(
        "artist_sg_data",
        sa.Column("artist_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("slug", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["artist_id"],
            ["artist.id"],
            name="artist_sg_data_artist_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("artist_id", name="artist_sg_data_pkey"),
    )
    op.create_table(
        "event_sg_data",
        sa.Column("event_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("slug", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
            name="event_sg_data_event_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("event_id", name="event_sg_data_pkey"),
    )
    op.drop_table("sales")
    op.drop_table("event_tm_data")
    op.drop_table("event_image")
    op.drop_table("artist_tm_data")
    op.drop_table("artist_image")
    # ### end Alembic commands ###
