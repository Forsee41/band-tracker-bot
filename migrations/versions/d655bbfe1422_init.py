"""init

Revision ID: d655bbfe1422
Revises:
Create Date: 2023-07-06 15:43:24.783134

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d655bbfe1422"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "artist",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("spotify", sa.String(), nullable=True),
        sa.Column("tickets_link", sa.String(), nullable=False),
        sa.Column("inst_link", sa.String(), nullable=True),
        sa.Column("youtube_link", sa.String(), nullable=True),
        sa.Column("upcoming_events_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "event",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("venue", sa.String(), nullable=True),
        sa.Column("start_date", sa.DateTime(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("ticket_url", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "genre",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("join_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "artist_genre",
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column("genre_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["genre_id"], ["genre.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("artist_id", "genre_id"),
    )
    op.create_table(
        "artist_image",
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("artist_id", "url"),
    )
    op.create_table(
        "artist_tm_data",
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("artist_id"),
    )
    op.create_table(
        "event_artist",
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("artist_id", "event_id"),
    )
    op.create_table(
        "event_image",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("event_id", "url"),
    )
    op.create_table(
        "event_tm_data",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.create_table(
        "follow",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.Column(
            "range",
            sa.Enum("CITY", "COUNTRY", "REGION", "WORLDWIDE", name="range"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "artist_id"),
    )
    op.create_table(
        "sales",
        sa.Column("event_id", sa.UUID(), nullable=False),
        sa.Column("on_sale", sa.Boolean(), nullable=False),
        sa.Column("price_max", sa.Integer(), nullable=False),
        sa.Column("price_min", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["event.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.create_table(
        "subscription",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("artist_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "artist_id"),
    )
    op.create_table(
        "user_settings",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("is_muted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_settings")
    op.drop_table("subscription")
    op.drop_table("sales")
    op.drop_table("follow")
    op.drop_table("event_tm_data")
    op.drop_table("event_image")
    op.drop_table("event_artist")
    op.drop_table("artist_tm_data")
    op.drop_table("artist_image")
    op.drop_table("artist_genre")
    op.drop_table("user")
    op.drop_table("genre")
    op.drop_table("event")
    op.drop_table("artist")
    # ### end Alembic commands ###
